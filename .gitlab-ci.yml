image: jhipster/jhipster:v6.8.0

cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
        - .gradle/
stages:
    - test
    - release
    - deploy

variables:
  GKE_CLUSTER_NAME: jhipster
  GKE_ZONE: europe-west2-a
  GKE_PROJECT: private-250107
  DOMAIN_NAME: 35.244.130.75.nip.io
  PROD_NAMESPACE: production
  DOCKER_IMAGE_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA
  DOCKER_IMAGE_FULL_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA

gradle-test:
    stage: test
    script:
        - ./gradlew test -PnodeInstall --no-daemon
    artifacts:
        reports:
            junit: build/test-results/test/TEST-*.xml
        paths:
            - build/test-results/
            - build/jacoco/
        expire_in: 1 day

gradle-integration-test:
    stage: test
    script:
        - ./gradlew integrationTest -PnodeInstall --no-daemon
    artifacts:
        reports:
            junit: build/test-results/integrationTest/TEST-*.xml
        paths:
            - build/test-results/
            - build/jacoco/
        expire_in: 1 day

docker-push:
    stage: release
    script:
        - ./gradlew jib -Pprod -Djib.to.image=$DOCKER_IMAGE_FULL_NAME -Djib.to.auth.username="gitlab-ci-token"  -Djib.to.auth.password=$CI_BUILD_TOKEN

deploy-to-production:
    stage: deploy
    image: devth/helm:v3.1.1
    script:
      - init_gke
      - helm upgrade --install jhipster ./helm/jhipster --namespace=${PROD_NAMESPACE} --set image_tag=${DOCKER_IMAGE_TAG} --set domain_name=${DOMAIN_NAME}
    environment:
        name: ${PROD_NAMESPACE}
        url: http://${PROD_NAMESPACE}.${DOMAIN_NAME}
    when: manual
    only:
      - master

.functions: &functions |
  # Functions
  function init_gke() {
      mkdir -p /etc/deploy
      echo ${GKE_SERVICE_ACCOUNT} | base64 -d > /etc/deploy/service-key.json
      gcloud auth activate-service-account --key-file /etc/deploy/service-key.json --project=${GKE_PROJECT}
      gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --zone ${GKE_ZONE} --project ${GKE_PROJECT}
  }

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
  - *functions
